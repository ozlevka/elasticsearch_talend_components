<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map		
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    
    String line_separator = System.getProperty("line.separator");
    String query = ElementParameterParser.getValue(node, "__JSON_TEMPLATE__");
    
    query = query.replace(line_separator, " ");
    
    String index = ElementParameterParser.getValue(node, "__INDEX__");
    String type = ElementParameterParser.getValue(node, "__DOC_TYPE__");
%>

	org.ankor.elasticwrapper.queries.QueryData qd_<%=cid%> = org.ankor.elasticwrapper.queries.QueryDataFactory.getQueryData(org.ankor.elasticwrapper.queries.QueryDataType.SEARCH);
	String query_data_<%=cid%> = "<%=query%>";
<%
	IMetadataTable preMetadata = null;
	if ((node.getIncomingConnections()!=null)&&(node.getIncomingConnections().size()>0)) {
		preMetadata = node.getIncomingConnections().get(0).getMetadataTable();
		String inRowName = node.getIncomingConnections().get(0).getName();
		List<IMetadataColumn> columns = preMetadata.getListColumns();
		for (int i = 0; i < columns.size(); i++) {
			IMetadataColumn col = columns.get(i); 
%>
		query_data_<%=cid%> = query_data_<%=cid%>.replace(":<%=col.getLabel()%>", <%=inRowName%>.<%=col.getLabel()%>);
	
<% }
}%>
	qd_<%=cid%>.setQuery(query_data_<%=cid%>); //Here do replases to parameters
	qd_<%=cid%>.addIndex("<%=index%>");
	qd_<%=cid%>.addType("<%=type%>");
	
	com.google.gson.JsonObject result_<%=cid%> = client_<%=cid%>.executeQuery(qd_<%=cid%>);
	com.google.gson.JsonArray hits_<%=cid%> = result_<%=cid%>.get("hits").getAsJsonObject().get("hits").getAsJsonArray();
<%
	String outRowName = null;
	List< ? extends IConnection> outConns = node.getOutgoingConnections();
    if(outConns != null && outConns.size() > 0) {
    	outRowName = outConns.get(0).getName();
    	List<Map<String, String>> columnMapping = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__MAPPING__");
%>	
	
		if(hits_<%=cid%> != null && hits_<%=cid%>.size() > 0) {
			com.google.gson.JsonObject object_<%=cid%> = hits_<%=cid%>.get(0).getAsJsonObject();
<%
			for(Map<String, String> column : columnMapping) {
			String colName = "";
			String xPath = "";
			for(String key : column.keySet()) {
				if(key.equals("SCHEMA_COLUMN")) colName = column.get(key);
				if(key.equals("JSON")) xPath = column.get(key);
			}
%>
				<%=outRowName%>.<%=colName%> = org.ankor.elasticwrapper.JsonHelper.getJsonValueByPath(object_<%=cid%>,"<%=xPath%>");
<%
			}
%>
		}
	
<%
	}
%>
	
	
	
	
	
	